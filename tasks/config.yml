---
# tasks file for ansible-clamav

# log files check
- name: Ensure clamd log files exist when defined
  file:
    path: "{{item.path}}"
    state: touch
    mode: "{{item.mode}}"
    owner: "{{item.owner}}"
    group: "{{item.group}}"
  with_items:
   - {path: "{{clamd_log_file}}", mode: 0644, owner: clamscan, group: clamscan}
  when: clamd_log_file is defined or freshclam_log_file is defined
  tags: [ services, daemons, log, clamd, freshclam ]

- name: Ensure freshclam log files exist when defined
  file:
    path: "{{item.path}}"
    state: touch
    mode: "{{item.mode}}"
    owner: "{{item.owner}}"
    group: "{{item.group}}"
  with_items:
   - {path: "{{freshclam_log_file}}", mode: 0644, owner: clamupdate, group: clamupdate}
  when: freshclam_log_file is defined
  tags: [ services, daemons, log, freshclam ]

# config files
- name: Push config files
  template:
    src: "{{item.src}}"
    dest: "{{item.dest}}"
    mode: "{{item.mode}}"
    owner: "{{item.owner}}"
    group: "{{item.group}}"
  with_items:
   - {src: "conf/scan.conf.j2", dest: "/etc/clamd.d/scan.conf", mode: 644, owner: clamscan, group: clamscan}
   - {src: "conf/freshclam.conf.j2", dest: "/etc/freshclam.conf", mode: 644, owner: clamupdate, group: clamupdate}
  tags: [ conf, config, freshclam, clamd ]


- name: Ensure clamd service files exist
  stat:
    path: "/usr/lib/systemd/system/clamd@.service"
  register: clamdf
  tags: [services, daemons, clamd ]

- name: Ensure freshclam service files exist
  stat:
    path: "/usr/lib/systemd/system/clamav-freshclam.service"
  register: freshf
  tags: [ services, daemons, freshclam ]

- debug:
    var: clamdf.stat.path 
  when: clamdf.stat.exists is defined and clamdf.stat.exists
  tags: [ services, daemons, clamd ]

- debug:
    var: freshf.stat.path 
  when: freshf.stat.exists is defined and freshf.stat.exists
  tags: [ services, daemons, freshclam ]

# Push service file
- name: push clamdscan service file
  template:
    src: services/clamd.service.j2
    dest: "/usr/lib/systemd/system/clamd@.service"
    owner: clamscan
    group: clamscan
    mode: 644
  when: clamdf.stat.exists is not defined or not clamdf.stat.exists
  tags: [services, daemons, clamd ]

- name: push freshclam service file
  template:
    src: services/clamav-freshclam.service.j2
    dest: "/usr/lib/systemd/system/clamav-freshclam.service"
    owner: clamupdate
    group: clamupdate
    mode: 644
  when: freshf.stat.exists is not defined or not freshf.stat.exists
  tags: [ services, daemons, freshclam ]


## Start freshclam and clamd service
- name: start freshclam and clamd services
  systemd:
    name: "{{item}}"
    state: started
    daemon_reload: yes
    enabled: yes
  with_items:
   - clamav-freshclam
   - clamd@scan
  tags: [ services, daemons, freshclam, clamd ]

## add cron job to update databse 
- name: Ensure a job that runs a freshclam.
  cron:
    name: "{{item.name | default('update clamav database')}}"
    minute: "{{item.minute | default(0)}}"
    hour: "{{item.hour | default('01,13')}}"
    job: "{{item.job | default('/usr/bin/freshclam --quiet')}}"
    user: "{{item.user | default(omit)}}"
    state: "{{item.state | default('present')}}"
  with_items: 
    - "{{freshclam_cron}}"
  when: freshclam_cron is defined
  tags: [ cron, freshclam]

## add cron job to scan system
- name: Add cron job to scan system
  cron:
    name: "{{item.name | default('Clamav scan')}}"
    minute: "{{item.minute | default(0)}}"
    hour: "{{item.hour | default('04')}}"
    job: "{{item.job | default('/usr/bin/clamscan -i -r -o --quiet')}}"
    user: "{{item.user | default(omit)}}"
    state: "{{item.state | default('present')}}"
  with_items: 
    - "{{clamscan_cron}}"
  when: clamscan_cron is defined
  tags: [ cron, clamd]

